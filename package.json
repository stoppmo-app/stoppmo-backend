{
    "name": "StopPMO Core",
    "version": "1.0.0",
    "description": "Main codebase for StopPMO.",
    "scripts": {
        "dev": "npm-run-all --sequential dev:stop dev:buildAndStart:detach dev:attach",
        "dev:stop": "docker compose down app_dev",
        "dev:clean": "npm-run-all --sequential dev:docker:containers:clean dev:docker:images:clean dev:docker:volumes:clean",
        "dev:shell": "docker compose exec -it app_dev sh",
        "db": "npm-run-all --sequential db:stop db:buildAndStart:detach",
        "db:stop": "docker compose down db",
        "prod": "npm-run-all --sequential prod:stop prod:buildAndStart:detach prod:attach",
        "prod:stop": "docker compose down app",
        "prod:shell": "docker compose exec -it app sh",
        "prepare": "npm run install:all",
        "format": "swiftformat ./",
        "format:lint": "swiftformat --lint ./",
        "lint": "swiftlint ./",
        "build:all": "npm-run-all --parallel build:backend",
        "build:backend": "swift build",
        "build:backendWithClean": "swift build",
        "qualityChecks:all": "npm-run-all --sequential format:lint lint",
        "secrets:import:all": "npm-run-all --sequential secrets:import:prod secrets:import:staging secrets:import:sandbox",
        "prepare:action": "npm install",
        "generate": "",
        "install:all": "npm-run-all --parallel install:qualityCheckTools",
        "install:swiftlint": "brew install swiftlint",
        "install:swiftformat": "brew install swiftformat",
        "install:qualityCheckTools": "npm-run-all --sequential install:swiftlint install:swiftformat",
        "secrets:import:prod": "fly secrets import --config ./infra/production/fly.production.toml < ./infra/production/.env",
        "secrets:import:staging": "fly secrets import --config ./infra/staging/fly.staging.toml < ./infra/staging/.env",
        "secrets:import:sandbox": "fly secrets import --config ./infra/sandbox/fly.sandbox.toml < ./infra/sandbox/.env",
        "dev:start": "docker compose up app_dev",
        "dev:buildAndStart": "npm run dev:start -- --build",
        "dev:buildAndStart:detach": "npm run dev:buildAndStart -- -d",
        "dev:attach": "docker compose attach app_dev",
        "dev:docker:containers:clean": "for container in $(docker ps -aq); do docker rm -f $container; done",
        "dev:docker:images:clean": "docker rmi -f $(docker images -aq)",
        "dev:docker:volumes:clean": "docker volume prune --all --force",
        "db:start": "docker compose up db",
        "db:buildAndStart": "npm run db:start -- --build",
        "db:buildAndStart:detach": "npm run db:buildAndStart -- -d",
        "prod:start": "docker compose up app",
        "prod:buildAndStart": "npm run prod:start -- --build",
        "prod:buildAndStart:detach": "npm run prod:buildAndStart -- -d",
        "prod:attach": "docker compose attach app"
    },
    "keywords": [
        "ios",
        "swift",
        "vapor"
    ],
    "author": "williamFernsV3",
    "license": "ISC",
    "devDependencies": {
        "npm-run-all": "^4.1.5"
    }
}
